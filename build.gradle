buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
        mavenCentral()

    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath 'com.google.code.gson:gson:2.8.5'
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
    }
}


plugins {
    id 'com.github.johnrengelman.shadow' version '4.0.2'
}


apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.matthewprenger.cursegradle'


version = "${version_minecraft}-${mod_version}"
group = "${mod_group}"
archivesBaseName = "${mod_name}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: "${version_mcp}".toString()

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            //property 'forge.logging.console.level', 'debug'

            mods {
                mmorpg {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            //property 'forge.logging.console.level', 'debug'

            mods {
                mmorpg {
                    source sourceSets.main
                }
            }
        }


        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP,CORE,PULSARCONFIG'

            // Recommended logging level for the console
            //property 'forge.logging.console.level', 'debug'

            args '--mod', 'mmorpg', '--all', '--output', file('src/generated/resources/')

            mods {
                mmorpg {
                    source sourceSets.main
                }
            }
        }
    }
}


sourceSets {
    main {
        resources {
            srcDirs += project.file("src/generated/resources")
        }
    }
}

repositories {
    jcenter()

    maven {
        name = "jitpack"
        url "https://jitpack.io"
    }

    maven { url = "http://maven2.tterrag.com" } // AutoSave	

    maven { url = "https://maven.theillusivec4.top/" } // curios  

    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }

}

configurations {
    // configuration that holds jars to embed inside the jar
    embed
    compile.extendsFrom(embed)

}


dependencies {


    minecraft "net.minecraftforge:forge:${version_forge}"

    compile fg.deobf("top.theillusivec4.curios:curios:${version_curios}") // Trinkets, REQUIRED
    compile 'com.google.code.gson:gson:2.8.5' // Serialize More Difficult Configs, REQUIRED


}


jar {

    from configurations.embed.collect {
        it.isDirectory() ? it : zipTree(it).matching {
            exclude 'META-INF', 'META-INF/**'
        }
    }

    manifest {
        attributes(["Specification-Title"     : "${mod_name}",
                    "Specification-Vendor"    : "${mod_author}",
                    "Specification-Version"   : "${version}",
                    "Implementation-Title"    : "${mod_name}",
                    "Implementation-Version"  : "${version}",
                    "Implementation-Vendor"   : "${mod_author}",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")],)
    }


}

task deobfJar(type: Jar) {
    classifier = 'deobf'
    from sourceSets.main.output
}

def myCurseRelatons = {
    requiredLibrary 'curios'
    optionalLibrary 'jei'
}
